<html><head>
<title>midterm-1-assignment.p</title>
<!-- Generated by Apalon 4.3.3 at 2014.03.12.02.44.58 GMT -->
</head>
<basefont face="Book Antiqua" size=3><body bgcolor=#FFFFFF text=#000040 link=#0000BB vlink=#330088 >
<a name=Top_Of_Page></a>
<center><font size=4>CMPUT 325 - Winter 2013-2014 <br />
 Prof Jim Hoover <br />
 Midterm 1 Replacement Assignment <br />
 Due Monday March 17, 2014 <br />
 </font></center> <b>NOTES:</b> <ul> 
<p><li>
 The max of this assignment and your Midterm 1 mark will replace your Midterm 1 mark. 
<p><li>
 The actual questions are in the code examples below. You simply put your answer in the space below the parts marked <code><font face="Courier">QUESTION</font></code>. 
<p><li>
 All the questions are EQUALLY WEIGHTED. 
<p><li>
 Upload your answers to Moodle, in the Midterm 1 Replacement section, to the assignment corresponding to the question. You should upload a single file, <code><font face="Courier">trace.rkt</font></code>. Do not upload the <code><font face="Courier">tree-edit.rkt</font></code> tree editing module base code. 
<p><li>
 To make your life easier, there are DOS and Unix line termination versions for the base code files. </ul> <font size=4><b>Background Code</b></font> <br /><br />
 Here is a sample suite of functions for editing trees. They will be used to implement the program transformations in the question below. <br />
 <a href=".././code/tree-edit.rkt">./code/tree-edit.rkt</a><br><br><TABLE cellspacing=0 cellpadding=0>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">#lang&nbsp;racket</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(provide&nbsp;list-edit)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(provide&nbsp;e-tree-ref)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(provide&nbsp;e-tree-find-paths-match)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(provide&nbsp;e-tree-find-paths)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(provide&nbsp;e-tree-edit)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(provide&nbsp;e-tree-edit-many)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;this&nbsp;module&nbsp;provides&nbsp;tools&nbsp;for&nbsp;manipulating&nbsp;trees.&nbsp;&nbsp;You&nbsp;can&nbsp;navigate</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;to&nbsp;specific&nbsp;points&nbsp;a&nbsp;tree&#44;&nbsp;search&nbsp;for&nbsp;subtrees&#44;&nbsp;and&nbsp;edit&nbsp;subtrees&nbsp;in</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;a&nbsp;tree.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;an&nbsp;e-tree&nbsp;represents&nbsp;the&nbsp;kinds&nbsp;of&nbsp;tree&nbsp;structures&nbsp;that&nbsp;we&nbsp;want&nbsp;to</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;manipulate.&nbsp;&nbsp;Defined&nbsp;recursively:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;atom&nbsp;:=&nbsp;a&nbsp;single&nbsp;primative&nbsp;unstructured&nbsp;element&#44;&nbsp;like&nbsp;a&nbsp;number&nbsp;42&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;symbol&nbsp;'x</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;e-tree&nbsp;:=&nbsp;atom&nbsp;|&nbsp;(&nbsp;e-tree&nbsp;*&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;that&nbsp;is&#44;&nbsp;an&nbsp;e-tree&nbsp;is&nbsp;an&nbsp;atom&#44;&nbsp;or&nbsp;a&nbsp;list&nbsp;of&nbsp;0&nbsp;or&nbsp;more&nbsp;e-trees</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;the&nbsp;following&nbsp;operations&nbsp;are&nbsp;implemented&nbsp;below:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;list-edit&nbsp;-&nbsp;is&nbsp;a&nbsp;simple&nbsp;function&nbsp;for&nbsp;modifying&nbsp;a&nbsp;specific&nbsp;entry&nbsp;in&nbsp;a&nbsp;list</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;and&nbsp;returning&nbsp;the&nbsp;resulting&nbsp;list</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;e-tree-ref&nbsp;-&nbsp;is&nbsp;used&nbsp;to&nbsp;follow&nbsp;a&nbsp;path&nbsp;into&nbsp;an&nbsp;e-tree&nbsp;and&nbsp;return&nbsp;the</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;subtree&nbsp;rooted&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;path.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;e-tree-find-paths&nbsp;does&nbsp;a&nbsp;search&nbsp;and&nbsp;returns&nbsp;paths&nbsp;to&nbsp;subtrees&nbsp;in&nbsp;the&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;tree&nbsp;that&nbsp;match&nbsp;the&nbsp;target&nbsp;tree.&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;e-tree-find-paths-match&nbsp;does&nbsp;a&nbsp;search&nbsp;and&nbsp;returns&nbsp;paths&nbsp;to&nbsp;subtrees</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;in&nbsp;the&nbsp;tree&nbsp;that&nbsp;satisfy&nbsp;a&nbsp;match&nbsp;predicate</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;e-tree-edit&nbsp;-&nbsp;is&nbsp;a&nbsp;function&nbsp;that&nbsp;follows&nbsp;a&nbsp;path&nbsp;into&nbsp;a&nbsp;tree&nbsp;and&nbsp;then&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;edits&nbsp;the&nbsp;subtree&nbsp;rooted&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;path.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;e-tree-edit-many&nbsp;-&nbsp;takes&nbsp;a&nbsp;list&nbsp;of&nbsp;paths&nbsp;and&nbsp;edits&nbsp;the&nbsp;endpoints&nbsp;of&nbsp;each&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;of&nbsp;each&nbsp;path.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;editing&nbsp;lists:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;we&nbsp;need&nbsp;a&nbsp;primative&nbsp;for&nbsp;editing&nbsp;a&nbsp;specific&nbsp;element&nbsp;of&nbsp;a&nbsp;list</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;given&nbsp;editing&nbsp;function&nbsp;edit-fn&#44;&nbsp;list&nbsp;lst&#44;&nbsp;and&nbsp;0-origin&nbsp;position&nbsp;n&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;inside&nbsp;lst&#44;&nbsp;return&nbsp;a&nbsp;list&nbsp;which&nbsp;is&nbsp;lst&nbsp;with&nbsp;the&nbsp;element&nbsp;at&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;(list-ref&nbsp;lst&nbsp;n)&nbsp;replaced&nbsp;by&nbsp;(edit-fn&nbsp;(list-ref&nbsp;lst&nbsp;n))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;for&nbsp;example</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&#62;&nbsp;(list-edit&nbsp;(lambda&nbsp;(x)&nbsp;(*&nbsp;10&nbsp;x))&nbsp;'(0&nbsp;1&nbsp;2&nbsp;3&nbsp;4)&nbsp;2)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;'(0&nbsp;1&nbsp;20&nbsp;3&nbsp;4)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(list-edit&nbsp;edit-fn&nbsp;lst&nbsp;n)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;(let-values&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;[&nbsp;(a&nbsp;b)&nbsp;(split-at&nbsp;lst&nbsp;n)&nbsp;]&nbsp;)&nbsp;&nbsp;;&nbsp;note&nbsp;how&nbsp;to&nbsp;capture&nbsp;a&nbsp;2&nbsp;value&nbsp;result</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(null?&nbsp;b)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(error&nbsp;(format&nbsp;"edit-list&nbsp;n&nbsp;of&nbsp;~a&nbsp;&#62;=&nbsp;length&nbsp;l&nbsp;of&nbsp;~a"&nbsp;n&nbsp;lst))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(append&nbsp;a&nbsp;(list&nbsp;(edit-fn&nbsp;(first&nbsp;b)))&nbsp;(rest&nbsp;b))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;paths&nbsp;in&nbsp;e-trees:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;a&nbsp;path&nbsp;in&nbsp;an&nbsp;e-tree&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;0-origin&nbsp;indexes&nbsp;that&nbsp;navigate&nbsp;to&nbsp;a&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;sub-component&nbsp;of&nbsp;the&nbsp;e-tree.&nbsp;&nbsp;Navigation&nbsp;via&nbsp;a&nbsp;path&nbsp;is&nbsp;defined</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;by&nbsp;the&nbsp;e-tree-ref&nbsp;function&#44;&nbsp;modelled&nbsp;after&nbsp;list-ref:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(e-tree-ref&nbsp;e-tree&nbsp;path)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(if&nbsp;(null?&nbsp;path)&nbsp;e-tree</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-ref&nbsp;(list-ref&nbsp;e-tree&nbsp;(first&nbsp;path))&nbsp;(rest&nbsp;path)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;find&nbsp;paths&nbsp;to&nbsp;all&nbsp;instances&nbsp;of&nbsp;target-e-tree&nbsp;in&nbsp;expression&nbsp;expr</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;A&nbsp;path&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;0-origin&nbsp;indexes&nbsp;into&nbsp;the&nbsp;expression&nbsp;tree</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;indicating&nbsp;how&nbsp;to&nbsp;navigate&nbsp;down&nbsp;from&nbsp;the&nbsp;root&nbsp;to&nbsp;locate&nbsp;the&nbsp;target</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(e-tree-find-paths&nbsp;target-e-tree&nbsp;e-tree&nbsp;[paths&nbsp;'()]&nbsp;[rootpath&nbsp;'()])</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-find-paths-match&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(t)&nbsp;(equal?&nbsp;target-e-tree&nbsp;t))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-tree&nbsp;paths&nbsp;rootpath)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;find&nbsp;paths&nbsp;to&nbsp;all&nbsp;instances&nbsp;of&nbsp;target-e-tree&nbsp;in&nbsp;that&nbsp;satisfy&nbsp;match-pred?</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;A&nbsp;path&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;0-origin&nbsp;indexes&nbsp;into&nbsp;the&nbsp;expression&nbsp;tree</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;indicating&nbsp;how&nbsp;to&nbsp;navigate&nbsp;down&nbsp;to&nbsp;the&nbsp;root&nbsp;to&nbsp;locate&nbsp;the&nbsp;target</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(e-tree-find-paths-match&nbsp;match-pred?&nbsp;e-tree&nbsp;[paths&nbsp;'()]&nbsp;[rootpath&nbsp;'()]&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;(cond</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;are&nbsp;we&nbsp;at&nbsp;a&nbsp;matching&nbsp;term?&nbsp;&nbsp;Note&nbsp;we&nbsp;do&nbsp;not&nbsp;descend&nbsp;further&nbsp;to&nbsp;see&nbsp;if&nbsp;there</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;are&nbsp;more&nbsp;matches&nbsp;on&nbsp;this&nbsp;branch.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;(match-pred?&nbsp;e-tree)&nbsp;(append&nbsp;paths&nbsp;(list&nbsp;rootpath)&nbsp;)&nbsp;]</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;ok&#44;&nbsp;no&nbsp;match&#44;&nbsp;no&nbsp;recursion&nbsp;when&nbsp;e-tree&nbsp;empty</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;(null?&nbsp;e-tree)&nbsp;paths&nbsp;]</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;do&nbsp;a&nbsp;depth-first&nbsp;recurse&nbsp;into&nbsp;sub&nbsp;e-trees&nbsp;accumulating&nbsp;paths&nbsp;to&nbsp;matches</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;(list?&nbsp;e-tree)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(second&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(foldl&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;(e&nbsp;s)&nbsp;is&nbsp;current&nbsp;sub&nbsp;e-tree&nbsp;e&#44;&nbsp;and&nbsp;prior&nbsp;state&nbsp;s</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;where&nbsp;prior&nbsp;state&nbsp;s&nbsp;is&nbsp;(n&nbsp;p)&nbsp;where&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;is&nbsp;0-origin&nbsp;position&nbsp;of&nbsp;e&nbsp;in&nbsp;containing&nbsp;e-tree&#44;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;collection&nbsp;of&nbsp;paths&nbsp;found&nbsp;so&nbsp;far</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(e&nbsp;s)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;(&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;pull&nbsp;apart&nbsp;state</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(n&nbsp;(first&nbsp;s))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(p&nbsp;(second&nbsp;s))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;new&nbsp;state&nbsp;-&nbsp;next&nbsp;position&#44;&nbsp;add&nbsp;newly&nbsp;found&nbsp;paths</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(list</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(add1&nbsp;n)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-find-paths-match&nbsp;match-pred?&nbsp;e&nbsp;p&nbsp;(append&nbsp;rootpath&nbsp;(list&nbsp;n)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(list&nbsp;0&nbsp;paths)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-tree&nbsp;&nbsp;;&nbsp;fold&nbsp;over&nbsp;the&nbsp;subtrees&nbsp;left&nbsp;to&nbsp;right</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;]</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;else&nbsp;paths&nbsp;]</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;editing&nbsp;e-trees:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;given&nbsp;an&nbsp;e-tree&nbsp;and&nbsp;a&nbsp;target-path&nbsp;to&nbsp;a&nbsp;subtree&nbsp;of&nbsp;e-tree&#44;&nbsp;we&nbsp;would&nbsp;like&nbsp;to&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;edit&nbsp;the&nbsp;subtree&nbsp;at&nbsp;the&nbsp;endpoint&nbsp;of&nbsp;the&nbsp;path.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;e-tree-edit&nbsp;returns&nbsp;an&nbsp;e-tree&nbsp;which&nbsp;is&nbsp;the&nbsp;original&nbsp;tree&nbsp;but&nbsp;with&nbsp;the&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;subtree&nbsp;t&nbsp;reached&nbsp;by&nbsp;edit-path&nbsp;repaced&nbsp;by&nbsp;(edit-fn&nbsp;t)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(e-tree-edit&nbsp;edit-fn&nbsp;e-tree&nbsp;target-path)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(cond&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;empty&nbsp;path&nbsp;edits&nbsp;entire&nbsp;e-tree</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;(null?&nbsp;target-path)&nbsp;(edit-fn&nbsp;e-tree)&nbsp;]</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;for&nbsp;longer&nbsp;path&#44;&nbsp;replace&nbsp;the&nbsp;(first&nbsp;target-path)&nbsp;position&nbsp;in&nbsp;e-tree&nbsp;with&nbsp;the</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;result&nbsp;of&nbsp;recursing&nbsp;down&nbsp;the&nbsp;sub&nbsp;e-tree&nbsp;at&nbsp;that&nbsp;position&nbsp;using&nbsp;the&nbsp;rest</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;of&nbsp;the&nbsp;target&nbsp;path</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;else&nbsp;(list-edit&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(sub-e-tree)&nbsp;(e-tree-edit&nbsp;edit-fn&nbsp;sub-e-tree&nbsp;(rest&nbsp;target-path)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-tree&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(first&nbsp;target-path))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;perform&nbsp;the&nbsp;same&nbsp;edit&nbsp;at&nbsp;multiple&nbsp;points&nbsp;in&nbsp;the&nbsp;tree.&nbsp;&nbsp;You&nbsp;need</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;to&nbsp;be&nbsp;careful&nbsp;if&nbsp;the&nbsp;paths&nbsp;intersect&nbsp;in&nbsp;the&nbsp;sense&nbsp;that&nbsp;the&nbsp;endpoint</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;of&nbsp;one&nbsp;path&nbsp;is&nbsp;in&nbsp;a&nbsp;sub&nbsp;e-tree&nbsp;below&nbsp;the&nbsp;endpoint&nbsp;of&nbsp;another&nbsp;path.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(e-tree-edit-many&nbsp;edit-fn&nbsp;e-tree&nbsp;edit-paths)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(foldl&nbsp;(lambda&nbsp;(path&nbsp;cur-e-tree)&nbsp;(e-tree-edit&nbsp;edit-fn&nbsp;cur-e-tree&nbsp;path))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-tree&nbsp;edit-paths)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr></TABLE> <br /><br />
 Here are some examples and tests illustrating the module. <br />
 <a href=".././code/tree-edit-tests.rkt">./code/tree-edit-tests.rkt</a><br><br><TABLE cellspacing=0 cellpadding=0>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">#lang&nbsp;racket</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;tests&nbsp;and&nbsp;examples&nbsp;for&nbsp;the&nbsp;tree&nbsp;editing&nbsp;module</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(require&nbsp;"tree-edit.rkt")</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;examples:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-e-tree-ref)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;t1&nbsp;'(a&nbsp;(b&nbsp;c)&nbsp;(d&nbsp;(e&nbsp;f)&nbsp;(g&nbsp;h&nbsp;(i&nbsp;j)))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(map&nbsp;displayln&nbsp;(list</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;t1</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;"</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-ref&nbsp;t1&nbsp;'())</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-ref&nbsp;t1&nbsp;'(0))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-ref&nbsp;t1&nbsp;'(2))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-ref&nbsp;t1&nbsp;'(2&nbsp;1&nbsp;1))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-ref&nbsp;t1&nbsp;'(2&nbsp;2&nbsp;2&nbsp;1))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(void)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-e-tree-edit)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;t1&nbsp;'(a&nbsp;(b&nbsp;c)&nbsp;(d&nbsp;(e&nbsp;f)&nbsp;(g&nbsp;h&nbsp;(i&nbsp;j)))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(map&nbsp;displayln&nbsp;(list</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;t1</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;"</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-edit&nbsp;(lambda&nbsp;(s)&nbsp;(rest&nbsp;s))&nbsp;t1&nbsp;'())</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-edit&nbsp;(lambda&nbsp;(s)&nbsp;'f1)&nbsp;t1&nbsp;'(0))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-edit&nbsp;(lambda&nbsp;(s)&nbsp;(list&nbsp;(second&nbsp;s)&nbsp;(first&nbsp;s)))&nbsp;t1&nbsp;'(1))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-edit&nbsp;(lambda&nbsp;(s)&nbsp;(list&nbsp;'f2&nbsp;s)&nbsp;)&nbsp;t1&nbsp;'(2&nbsp;1&nbsp;1))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-edit&nbsp;(lambda&nbsp;(s)&nbsp;(list&nbsp;'lambda&nbsp;(list&nbsp;(e-tree-ref&nbsp;s&nbsp;'(1)))&nbsp;s)&nbsp;)&nbsp;t1&nbsp;'(2&nbsp;2&nbsp;2))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(void)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-e-tree-edit-many)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;t1&nbsp;'(a&nbsp;(b&nbsp;c)&nbsp;(d&nbsp;(e&nbsp;f)&nbsp;(g&nbsp;h&nbsp;(i&nbsp;j)))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(map&nbsp;displayln&nbsp;(list</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;t1</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;"</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-edit-many&nbsp;(lambda&nbsp;(s)&nbsp;'f1)&nbsp;t1&nbsp;'(&nbsp;(0)&nbsp;(1&nbsp;1)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-edit-many&nbsp;(lambda&nbsp;(s)&nbsp;(list&nbsp;'f2&nbsp;s)&nbsp;)&nbsp;t1&nbsp;'(&nbsp;(2&nbsp;1&nbsp;1)&nbsp;(2&nbsp;2&nbsp;2))&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(void)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-e-tree-find-paths)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;t2&nbsp;'(a&nbsp;(b&nbsp;a)&nbsp;(b&nbsp;(a&nbsp;f)&nbsp;(f&nbsp;h&nbsp;(b&nbsp;a)))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(map&nbsp;displayln&nbsp;(list</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;t2</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;"</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-find-paths&nbsp;'a&nbsp;t2)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-find-paths&nbsp;'b&nbsp;t2)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-find-paths&nbsp;'(b&nbsp;a)&nbsp;t2)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-edit-many&nbsp;(lambda&nbsp;(s)&nbsp;'delta)&nbsp;t2&nbsp;(e-tree-find-paths&nbsp;'a&nbsp;t2))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(e-tree-edit-many&nbsp;(lambda&nbsp;(s)&nbsp;'delta)&nbsp;t2&nbsp;(e-tree-find-paths&nbsp;'(b&nbsp;a)&nbsp;t2)&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(void)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr></TABLE> <br /><br />
 And here is output from the sample examples and tests in the code above. <br />
 <a href=".././code/tree-edit-examples.txt">./code/tree-edit-examples.txt</a><br><br><TABLE cellspacing=0 cellpadding=0>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">List&nbsp;modifying:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(list-edit&nbsp;(lambda&nbsp;(x)&nbsp;(*&nbsp;10&nbsp;x))&nbsp;'(0&nbsp;1&nbsp;2&nbsp;3&nbsp;4)&nbsp;2)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;'(0&nbsp;1&nbsp;20&nbsp;3&nbsp;4)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">Tree&nbsp;path&nbsp;following:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;t1</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(a&nbsp;(b&nbsp;c)&nbsp;(d&nbsp;(e&nbsp;f)&nbsp;(g&nbsp;h&nbsp;(i&nbsp;j))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(e-tree-ref&nbsp;t1&nbsp;'())</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(a&nbsp;(b&nbsp;c)&nbsp;(d&nbsp;(e&nbsp;f)&nbsp;(g&nbsp;h&nbsp;(i&nbsp;j))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(e-tree-ref&nbsp;t1&nbsp;'(0))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;a</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(e-tree-ref&nbsp;t1&nbsp;'(2))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(d&nbsp;(e&nbsp;f)&nbsp;(g&nbsp;h&nbsp;(i&nbsp;j)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(e-tree-ref&nbsp;t1&nbsp;'(2&nbsp;1&nbsp;1))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;f</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(e-tree-ref&nbsp;t1&nbsp;'(2&nbsp;2&nbsp;2&nbsp;1))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;j</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">Tree&nbsp;path&nbsp;finding</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;t2</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(a&nbsp;(b&nbsp;a)&nbsp;(b&nbsp;(a&nbsp;f)&nbsp;(f&nbsp;h&nbsp;(b&nbsp;a))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(e-tree-find-paths&nbsp;'a&nbsp;t2)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;((0)&nbsp;(1&nbsp;1)&nbsp;(2&nbsp;1&nbsp;0)&nbsp;(2&nbsp;2&nbsp;2&nbsp;1))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(e-tree-find-paths&nbsp;'b&nbsp;t2)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;((1&nbsp;0)&nbsp;(2&nbsp;0)&nbsp;(2&nbsp;2&nbsp;2&nbsp;0))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(e-tree-find-paths&nbsp;'(b&nbsp;a)&nbsp;t2)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;((1)&nbsp;(2&nbsp;2&nbsp;2))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">Tree&nbsp;editing:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(e-tree-edit-many&nbsp;(lambda&nbsp;(s)&nbsp;'delta)&nbsp;t2&nbsp;(e-tree-find-paths&nbsp;'a&nbsp;t2))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(delta&nbsp;(b&nbsp;delta)&nbsp;(b&nbsp;(delta&nbsp;f)&nbsp;(f&nbsp;h&nbsp;(b&nbsp;delta))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;(e-tree-edit-many&nbsp;(lambda&nbsp;(s)&nbsp;'delta)&nbsp;t2&nbsp;(e-tree-find-paths&nbsp;'(b&nbsp;a)&nbsp;t2)&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(a&nbsp;delta&nbsp;(b&nbsp;(a&nbsp;f)&nbsp;(f&nbsp;h&nbsp;delta)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&#62;&nbsp;</font></code></font></td></tr></TABLE> <font size=4><b>Question 1:</b></font> <br /><br />
 Your answer for this question should be added to the code file below in the indicated places. <br /><br />
 <a href=".././code/trace.rkt">./code/trace.rkt</a><br><br><TABLE cellspacing=0 cellpadding=0>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">#lang&nbsp;racket</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(require&nbsp;"code/tree-edit.rkt")</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;Debugging&nbsp;a&nbsp;functional&nbsp;program&nbsp;can&nbsp;be&nbsp;tricky&#44;&nbsp;since&nbsp;the&nbsp;common&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;approach&nbsp;of&nbsp;adding&nbsp;debugging&nbsp;print&nbsp;or&nbsp;logging&nbsp;statements&nbsp;is&nbsp;not</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;a&nbsp;functional&nbsp;modification&nbsp;of&nbsp;the&nbsp;source&nbsp;code.&nbsp;&nbsp;For&nbsp;example&#44;&nbsp;think</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;of&nbsp;logging&nbsp;the&nbsp;value&nbsp;of&nbsp;x&nbsp;inside&nbsp;the&nbsp;condition&nbsp;of&nbsp;this&nbsp;if:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(odd&nbsp;x)&nbsp;(true-case&nbsp;x)&nbsp;(false-case&nbsp;x))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;Instead&nbsp;you&nbsp;need&nbsp;to&nbsp;wrap&nbsp;x&nbsp;in&nbsp;a&nbsp;function&nbsp;that&nbsp;behaves&nbsp;like&nbsp;the&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;identity&nbsp;function&#44;&nbsp;but&nbsp;also&nbsp;logs&nbsp;a&nbsp;value&nbsp;as&nbsp;it&nbsp;passes&nbsp;through.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;This&nbsp;is&nbsp;what&nbsp;the&nbsp;wrap-in-print&nbsp;function&nbsp;does&nbsp;below.&nbsp;&nbsp;You&nbsp;could&nbsp;use</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;it&nbsp;like&nbsp;this:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(odd&nbsp;(wrap-in-print&nbsp;"x&nbsp;is&nbsp;"&nbsp;x))&nbsp;(true-case&nbsp;x)&nbsp;(false-case&nbsp;x))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;or&nbsp;even&nbsp;like&nbsp;this</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(odd&nbsp;(wrap-in-print&nbsp;"x&nbsp;is&nbsp;"&nbsp;x))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(true-case&nbsp;x)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(wrap-in-print&nbsp;"false&nbsp;result&nbsp;is"&nbsp;(false-case&nbsp;x))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(wrap-in-print&nbsp;comment&nbsp;term)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(display&nbsp;(format&nbsp;"~a:&nbsp;~a\n"&nbsp;comment&nbsp;term))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;term</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-wrap&nbsp;x)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;(odd&nbsp;x)&nbsp;(=&nbsp;0&nbsp;(remainder&nbsp;x&nbsp;2)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;(true-case&nbsp;a)&nbsp;(*&nbsp;a&nbsp;2))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;(false-case&nbsp;a)&nbsp;(+&nbsp;a&nbsp;1))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(if&nbsp;(odd&nbsp;(wrap-in-print&nbsp;"x&nbsp;is&nbsp;"&nbsp;x))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(true-case&nbsp;x)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(wrap-in-print&nbsp;"false&nbsp;result&nbsp;is"&nbsp;(false-case&nbsp;x))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;PART&nbsp;1&nbsp;-&nbsp;write&nbsp;a&nbsp;function&nbsp;add-trace&nbsp;that&nbsp;takes&nbsp;an&nbsp;expression</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;and&nbsp;a&nbsp;path&nbsp;into&nbsp;the&nbsp;expression&#44;&nbsp;and&nbsp;wraps&nbsp;the&nbsp;end-point&nbsp;of&nbsp;the&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;path&nbsp;with&nbsp;wrap-in-print.&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;(add-trace&nbsp;code&nbsp;comment&nbsp;path)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;If&nbsp;term&nbsp;is&nbsp;the&nbsp;subtree&nbsp;at&nbsp;the&nbsp;endpoint&nbsp;of&nbsp;path&#44;&nbsp;then&nbsp;this&nbsp;will&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;wrap&nbsp;that&nbsp;end&nbsp;point&nbsp;in&nbsp;a&nbsp;(wrap-in-print&nbsp;comment&nbsp;term)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;If&nbsp;(eval&nbsp;code)&nbsp;would&nbsp;result&nbsp;in&nbsp;a&nbsp;proper&nbsp;racket&nbsp;expression</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;then&nbsp;(eval&nbsp;(add-trace&nbsp;code&nbsp;comment&nbsp;path))&nbsp;should&nbsp;also&nbsp;result</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;in&nbsp;a&nbsp;proper&nbsp;racket&nbsp;expression</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;Hint:&nbsp;if&nbsp;you&nbsp;use&nbsp;e-tree-edit&nbsp;this&nbsp;function&nbsp;is&nbsp;only&nbsp;1&nbsp;line&nbsp;long.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;trace&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;expression&nbsp;at&nbsp;the&nbsp;endpoint&nbsp;of&nbsp;path</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(add-trace&nbsp;code&nbsp;comment&nbsp;path)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;your&nbsp;code&nbsp;goes&nbsp;here&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;example&nbsp;uses&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;prog-g&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;'(define&nbsp;(g&nbsp;x)&nbsp;(if&nbsp;(&#60;&nbsp;x&nbsp;0)&nbsp;x&nbsp;(+&nbsp;1&nbsp;(g&nbsp;(-&nbsp;x&nbsp;1)))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;trace&nbsp;the&nbsp;result&nbsp;of&nbsp;every&nbsp;call&nbsp;to&nbsp;g.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;should&nbsp;transform&nbsp;prog-g&nbsp;into</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;'(define&nbsp;(g&nbsp;x)&nbsp;(wrap-in-print&nbsp;"g-1"&nbsp;(if&nbsp;(&#60;&nbsp;x&nbsp;0)&nbsp;x&nbsp;(+&nbsp;1&nbsp;(g&nbsp;(-&nbsp;x&nbsp;1))))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-g-1)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;p&nbsp;(add-trace&nbsp;prog-g&nbsp;"g-1"&nbsp;'(2)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(print&nbsp;p)(newline)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(eval&nbsp;p)&nbsp;;&nbsp;test&nbsp;if&nbsp;syntactically&nbsp;correct</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;trace&nbsp;the&nbsp;inner&nbsp;call</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;should&nbsp;transform&nbsp;prog-g&nbsp;into</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;'(define&nbsp;(g&nbsp;x)&nbsp;(if&nbsp;(&#60;&nbsp;x&nbsp;0)&nbsp;x&nbsp;(+&nbsp;1&nbsp;(wrap-in-print&nbsp;"g-2"&nbsp;(g&nbsp;(-&nbsp;x&nbsp;1))))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-g-2)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;p&nbsp;(add-trace&nbsp;prog-g&nbsp;"g-2"&nbsp;'(2&nbsp;3&nbsp;2)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(print&nbsp;p)(newline)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(eval&nbsp;p)&nbsp;;&nbsp;test&nbsp;if&nbsp;syntactically&nbsp;correct</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;trace&nbsp;the&nbsp;value&nbsp;of&nbsp;x&nbsp;coming&nbsp;in</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;should&nbsp;transform&nbsp;prog-g&nbsp;into</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;'(define&nbsp;(g&nbsp;x)&nbsp;(if&nbsp;(&#60;&nbsp;(wrap-in-print&nbsp;"g-3"&nbsp;x)&nbsp;0)&nbsp;x&nbsp;(+&nbsp;1&nbsp;(g&nbsp;(-&nbsp;x&nbsp;1)))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-g-3)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;p&nbsp;(add-trace&nbsp;prog-g&nbsp;"g-3"&nbsp;'(2&nbsp;1&nbsp;1)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(print&nbsp;p)(newline)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(eval&nbsp;p)&nbsp;;&nbsp;test&nbsp;if&nbsp;syntactically&nbsp;correct</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-add-trace)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(test-g-1)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(test-g-2)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(test-g-3)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(trace-a-call&nbsp;param)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;instrument&nbsp;the&nbsp;function&nbsp;g&nbsp;and&nbsp;then&nbsp;use&nbsp;eval&nbsp;to&nbsp;introduce&nbsp;g&nbsp;into</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;the&nbsp;current&nbsp;environment</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(eval&nbsp;(add-trace&nbsp;prog-g&nbsp;"g-3"&nbsp;'(2&nbsp;1&nbsp;1)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;now&nbsp;actually&nbsp;run&nbsp;g.&nbsp;&nbsp;Note&nbsp;we&nbsp;have&nbsp;to&nbsp;put&nbsp;it&nbsp;into&nbsp;an&nbsp;eval&nbsp;becuase</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;g&nbsp;does&nbsp;not&nbsp;exist&nbsp;yet&nbsp;when&nbsp;checking&nbsp;if&nbsp;trace-a-call&nbsp;is&nbsp;properly</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;defined.&nbsp;So&nbsp;we&nbsp;build&nbsp;up&nbsp;an&nbsp;expression&nbsp;to&nbsp;then&nbsp;be&nbsp;evaluated.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(eval&nbsp;(list&nbsp;'g&nbsp;param))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;PART&nbsp;2&nbsp;begins&nbsp;here</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;Consider&nbsp;our&nbsp;friend&nbsp;factorial&#44;&nbsp;defined&nbsp;with&nbsp;an&nbsp;accumulator</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;fact-def&nbsp;needs&nbsp;to&nbsp;be&nbsp;eval's&nbsp;in&nbsp;order&nbsp;to&nbsp;actuall&nbsp;define&nbsp;fact</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;fact-def&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;'(define&nbsp;(fact&nbsp;n&nbsp;(a&nbsp;1))&nbsp;(if&nbsp;(&#60;=&nbsp;n&nbsp;0)&nbsp;a&nbsp;(fact&nbsp;(-&nbsp;n&nbsp;1)&nbsp;(*&nbsp;n&nbsp;a)))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;and&nbsp;then&nbsp;instrumented&nbsp;on&nbsp;every&nbsp;call</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;i-fact-def&nbsp;(add-trace&nbsp;fact-def&nbsp;"fact"&nbsp;'(2)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;which&nbsp;creates&nbsp;this:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;'(define&nbsp;(fact&nbsp;n&nbsp;(a&nbsp;1))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;(wrap-in-print&nbsp;"fact"&nbsp;(if&nbsp;(&#60;=&nbsp;n&nbsp;0)&nbsp;a&nbsp;(fact&nbsp;(-&nbsp;n&nbsp;1)&nbsp;(*&nbsp;n&nbsp;a)))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;now&nbsp;when&nbsp;you&nbsp;do&nbsp;this&nbsp;sequence&nbsp;of&nbsp;commands&nbsp;to&nbsp;define&nbsp;fact&nbsp;(in&nbsp;instrumented</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;form)&nbsp;and&nbsp;run&nbsp;it&nbsp;you&nbsp;get&nbsp;a&nbsp;weird&nbsp;trace.&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&#62;&nbsp;(eval&nbsp;i-fact-def)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&#62;&nbsp;(fact&nbsp;3)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;fact:&nbsp;6</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;fact:&nbsp;6</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;fact:&nbsp;6</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;fact:&nbsp;6</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;6</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;PART&nbsp;2&nbsp;-&nbsp;explain&nbsp;what&nbsp;is&nbsp;happening&nbsp;here&nbsp;with&nbsp;the&nbsp;repeated&nbsp;"fact:&nbsp;6"</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;PART&nbsp;3&nbsp;Background</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;You&nbsp;may&nbsp;want&nbsp;to&nbsp;add&nbsp;tracing&nbsp;to&nbsp;multiple&nbsp;points&nbsp;in&nbsp;the&nbsp;function.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;this&nbsp;can&nbsp;be&nbsp;done&nbsp;by&nbsp;composing&nbsp;add-trace&nbsp;with&nbsp;new&nbsp;paths&#44;&nbsp;provided&nbsp;the&nbsp;paths</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;do&nbsp;not&nbsp;interfere&nbsp;with&nbsp;each&nbsp;other&nbsp;in&nbsp;the&nbsp;sequence&nbsp;of&nbsp;compositions.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;for&nbsp;example&nbsp;in&nbsp;test-g-4&nbsp;below&#44;&nbsp;the&nbsp;result&nbsp;of&nbsp;the&nbsp;add&nbsp;trace&nbsp;is</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;'(define&nbsp;(g&nbsp;x)&nbsp;(wrap-in-print&nbsp;"3rd"&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(&#60;&nbsp;(wrap-in-print&nbsp;"1st"&nbsp;x)&nbsp;0)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;(+&nbsp;1&nbsp;(wrap-in-print&nbsp;"2nd"&nbsp;(g&nbsp;(-&nbsp;x&nbsp;1)))))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;and&nbsp;you&nbsp;get&nbsp;this&nbsp;trace&nbsp;on&nbsp;(g&nbsp;4)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&#62;&nbsp;(g&nbsp;4)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;1st:&nbsp;4</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;1st:&nbsp;3</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;1st:&nbsp;2</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;1st:&nbsp;1</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;1st:&nbsp;0</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;1st:&nbsp;-1</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;3rd:&nbsp;-1</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;2nd:&nbsp;-1</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;3rd:&nbsp;0</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;2nd:&nbsp;0</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;3rd:&nbsp;1</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;2nd:&nbsp;1</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;3rd:&nbsp;2</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;2nd:&nbsp;2</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;3rd:&nbsp;3</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;2nd:&nbsp;3</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;3rd:&nbsp;4</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;4</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-g-4)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;p&nbsp;(add-trace&nbsp;(add-trace&nbsp;(add-trace&nbsp;prog-g&nbsp;"1st"&nbsp;'(2&nbsp;1&nbsp;1))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"2nd"'(2&nbsp;3&nbsp;2))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"3rd"&nbsp;'(2)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(print&nbsp;p)(newline)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(eval&nbsp;p)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;The&nbsp;function&nbsp;add-trace-many&nbsp;takes&nbsp;a&nbsp;list&nbsp;of&nbsp;(comment&nbsp;path)&nbsp;pairs&nbsp;and&nbsp;adds&nbsp;a</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;trace&nbsp;at&nbsp;those&nbsp;points.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(add-trace-many&nbsp;prog&nbsp;trace-points)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(foldl&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;;&nbsp;point&nbsp;is&nbsp;the&nbsp;trace-point&nbsp;to&nbsp;add</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;;&nbsp;acc&nbsp;is&nbsp;the&nbsp;accumulated&nbsp;transforms&nbsp;so&nbsp;far</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;(lambda&nbsp;(point&nbsp;acc)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(add-trace&nbsp;acc&nbsp;(first&nbsp;point)&nbsp;(second&nbsp;point))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;prog&nbsp;trace-points))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(test-g-5)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;p&nbsp;(add-trace-many&nbsp;prog-g&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'(("1st"&nbsp;(2&nbsp;1&nbsp;1))&nbsp;("2nd"&nbsp;(2&nbsp;3&nbsp;2))&nbsp;("3rd"&nbsp;(2)))&nbsp;)&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(print&nbsp;p)(newline)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(eval&nbsp;p)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;PART&nbsp;3&nbsp;Continued&nbsp;-&nbsp;consider&nbsp;the&nbsp;standard&nbsp;recursive&nbsp;version&nbsp;of&nbsp;Fibonacci&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;where&nbsp;we&nbsp;want&nbsp;to&nbsp;trace&nbsp;every&nbsp;invocation&nbsp;of&nbsp;fib.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;fib-def&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;'(define&nbsp;(fib&nbsp;n)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cond&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;(=&nbsp;0&nbsp;n)&nbsp;1&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;(=&nbsp;1&nbsp;n)&nbsp;1&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(else&nbsp;(+&nbsp;(fib&nbsp;(-&nbsp;n&nbsp;1))&nbsp;(fib&nbsp;(-&nbsp;n&nbsp;2)))&nbsp;)&nbsp;&nbsp;)&nbsp;)&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;we&nbsp;can&nbsp;use&nbsp;e-tree-find-paths-match&nbsp;to&nbsp;identify&nbsp;paths&nbsp;to&nbsp;all&nbsp;the</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;recursive&nbsp;calls&nbsp;to&nbsp;fib&#44;&nbsp;then&nbsp;we&nbsp;can&nbsp;pair&nbsp;each&nbsp;path&nbsp;with&nbsp;a&nbsp;generated</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;trace&nbsp;symbol&nbsp;to&nbsp;create&nbsp;a&nbsp;list&nbsp;of&nbsp;trace&nbsp;points&#44;&nbsp;and&nbsp;then&nbsp;add-trace-many</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;to&nbsp;get&nbsp;an&nbsp;instrumented&nbsp;fib.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;trace-rec&nbsp;below&nbsp;generalizes&nbsp;this&nbsp;to&nbsp;any&nbsp;recursive&nbsp;fuction.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;trace&nbsp;symbol&nbsp;generator</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;trace-sym&nbsp;0)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(reset-trace-sym&nbsp;[x&nbsp;0])&nbsp;(set!&nbsp;trace-sym&nbsp;x))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(gen-trace-sym)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(let&nbsp;(&nbsp;(s&nbsp;(format&nbsp;"tr~a"&nbsp;trace-sym))&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;(set!&nbsp;trace-sym&nbsp;(add1&nbsp;trace-sym))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;s</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;turn&nbsp;a&nbsp;list&nbsp;of&nbsp;tree&nbsp;paths&nbsp;into&nbsp;a&nbsp;list&nbsp;of&nbsp;trace&nbsp;points&nbsp;by</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;pairing&nbsp;each&nbsp;path&nbsp;with&nbsp;a&nbsp;generated&nbsp;trace&nbsp;symbol</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(make-trace-points&nbsp;paths)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(map&nbsp;(lambda&nbsp;(p)&nbsp;(list&nbsp;(gen-trace-sym)&nbsp;p))&nbsp;paths)&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;trace&nbsp;all&nbsp;the&nbsp;recursive&nbsp;calls&nbsp;to&nbsp;name&nbsp;in&nbsp;function-def&#44;&nbsp;including&nbsp;the&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;final&nbsp;result&nbsp;being&nbsp;returned.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">(define&nbsp;(trace-rec&nbsp;name&nbsp;function-def)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(reset-trace-sym)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;;&nbsp;is-rec-call?&nbsp;looks&nbsp;for&nbsp;subtrees&nbsp;that&nbsp;look&nbsp;like&nbsp;(name&nbsp;...)&nbsp;indicating</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;;&nbsp;a&nbsp;recursive&nbsp;call.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;(is-rec-call?&nbsp;tree)&nbsp;(and&nbsp;(list?&nbsp;tree)&nbsp;(eq?&nbsp;name&nbsp;(first&nbsp;tree)))&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;;&nbsp;search&nbsp;for&nbsp;all&nbsp;these&nbsp;matches&nbsp;in&nbsp;the&nbsp;function&nbsp;definition&#44;&nbsp;these&nbsp;are&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;;&nbsp;points&nbsp;to&nbsp;be&nbsp;instrumented.</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(define&nbsp;paths&nbsp;(e-tree-find-paths-match&nbsp;is-rec-call?&nbsp;function-def))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;;&nbsp;insert&nbsp;the&nbsp;traces</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;(add-trace-many&nbsp;fib-def&nbsp;(make-trace-points&nbsp;paths))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;&nbsp;)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;Usage&nbsp;example:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;If&nbsp;we&nbsp;apply&nbsp;trace-rec&nbsp;as&nbsp;follows</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;(trace-rec&nbsp;'fib&nbsp;fib-def)</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;we&nbsp;get&nbsp;this&nbsp;result</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;'(define&nbsp;(wrap-in-print&nbsp;"tr0"&nbsp;(fib&nbsp;n))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;(cond&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;((=&nbsp;0&nbsp;n)&nbsp;1)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;((=&nbsp;1&nbsp;n)&nbsp;1)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;(else&nbsp;(+&nbsp;(wrap-in-print&nbsp;"tr1"&nbsp;(fib&nbsp;(-&nbsp;n&nbsp;1)))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(wrap-in-print&nbsp;"tr2"&nbsp;(fib&nbsp;(-&nbsp;n&nbsp;2)))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;when&nbsp;we&nbsp;really&nbsp;wanted&nbsp;something&nbsp;like&nbsp;this:</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;'(define&nbsp;(fib&nbsp;n)&nbsp;(wrap-in-print&nbsp;"tr0"&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;(cond&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;((=&nbsp;0&nbsp;n)&nbsp;1)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;((=&nbsp;1&nbsp;n)&nbsp;1)&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;(else&nbsp;(+&nbsp;(wrap-in-print&nbsp;"tr1"&nbsp;(fib&nbsp;(-&nbsp;n&nbsp;1)))&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(wrap-in-print&nbsp;"tr2"&nbsp;(fib&nbsp;(-&nbsp;n&nbsp;2)))))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;&nbsp;)))</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;Finally&nbsp;we&nbsp;get&nbsp;to&nbsp;the&nbsp;question&nbsp;...</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">&nbsp;</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;PART&nbsp;3&nbsp;TASK&nbsp;-&nbsp;What&nbsp;is&nbsp;wrong&nbsp;with&nbsp;the&nbsp;behaviour&nbsp;of&nbsp;trace-rec?&nbsp;&nbsp;Fix&nbsp;it</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;to&nbsp;the&nbsp;extent&nbsp;possible&nbsp;without&nbsp;changing&nbsp;tree-edit.rkt.&nbsp;&nbsp;What&nbsp;new&nbsp;functionality</font></code></font></td></tr>
<tr>
<td><code><font face="Courier">&nbsp;&nbsp;&nbsp;&nbsp;</font></code><font color=#000000><code><font face="Courier">;&nbsp;would&nbsp;you&nbsp;need&nbsp;to&nbsp;add&nbsp;to&nbsp;tree-edit.rkt&nbsp;to&nbsp;handle&nbsp;all&nbsp;recursive&nbsp;calls?</font></code></font></td></tr></TABLE> 
</body></html>
